# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      
      - name: Get tag
        if: github.event_name == 'release'
        id: tag
        uses: dawidd6/action-get-tag@v1
        
      - name: Use tag
        if: github.event_name == 'release'
        run: echo ${{steps.tag.outputs.tag}}

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - uses: actions/setup-java@v1
        with:
          java-version: '8'

      # Runs a set of commands using the runners shell
      - name: check
        run: ./gradlew check

      - name: test
        run: ./gradlew tests:test
      
      
      - name: release
        if: github.event_name == 'release'
        run: |
          echo this is a release!
          wget -O jdk-windows-64.zip https://github.com/ojdkbuild/ojdkbuild/releases/download/java-1.8.0-openjdk-1.8.0.232-1.b09/java-1.8.0-openjdk-1.8.0.232-1.b09.ojdkbuild.windows.x86_64.zip  > /dev/null;
          wget -O jdk-windows-32.zip https://github.com/ojdkbuild/ojdkbuild/releases/download/java-1.8.0-openjdk-1.8.0.252-2.b09-x86/java-1.8.0-openjdk-1.8.0.252-2.b09.ojdkbuild.windows.x86.zip > /dev/null;
          wget -O butler.zip https://broth.itch.ovh/butler/linux-amd64/LATEST/archive/default > /dev/null;
          unzip butler.zip;
          chmod +x butler;
          ./butler -V;
          ./gradlew desktop:packrWindows32;
          echo ./butler push deploy/Unciv-Windows32.zip yairm210/unciv:Windows32 --userversion ${{steps.tag.outputs.tag}};
          ./gradlew desktop:packrWindows64;
          echo ./butler push deploy/Unciv-Windows64.zip yairm210/unciv:Windows64 --userversion ${{steps.tag.outputs.tag}};
          ./gradlew desktop:packrLinux32;
          echo ./butler push deploy/Unciv-Linux32.zip yairm210/unciv:Linux32     --userversion ${{steps.tag.outputs.tag}};
          ./gradlew desktop:packrLinux64;
          echo ./butler push deploy/Unciv-Linux64.zip yairm210/unciv:Linux64     --userversion ${{steps.tag.outputs.tag}};
          ./gradlew desktop:zipLinuxFilesForJar;

          
